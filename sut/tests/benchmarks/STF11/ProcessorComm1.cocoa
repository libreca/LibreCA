p1: v1, v2;
p2: v1, v2;
p3: v1, v2, v3;
p4: -1, 0, 1;
p5: -1, 0, 1;
p6: -1, 0, 1;
p7: -1, 0, 1;
p8: v1, v2;
p9: v1, v2, v3;
p10: v1, v2, v3, v4;
p11: v1, v2, v3, v4;
p12: v1, v2, v3, v4;
p13: v1, v2, v3, v4;
p14: v1, v2, v3, v4;
p15: v1, v2, v3, v4;

$assert (p15=v3  && p1=v2 ) => ( p1=v1 && ! p1=v1);
$assert (p9=v2  && p1=v2 ) => ( p1=v1 && ! p1=v1);
$assert (p1=v2  && p14=v4 ) => ( p1=v1 && ! p1=v1);
$assert (p15=v2  && p1=v2 ) => ( p1=v1 && ! p1=v1);
$assert (p9=v1  && p1=v2 ) => ( p1=v1 && ! p1=v1);
$assert (p15=v4  && p1=v2 ) => ( p1=v1 && ! p1=v1);
$assert (p14=v3  && p1=v2 ) => ( p1=v1 && ! p1=v1);
$assert (p14=v2  && p1=v2 ) => ( p1=v1 && ! p1=v1);
$assert (p13=v4  && p1=v2 ) => ( p1=v1 && ! p1=v1);
$assert (p3=v2  && p2=v2 ) => ( p1=v1 && ! p1=v1);
$assert (p13=v2  && p1=v2 ) => ( p1=v1 && ! p1=v1);
$assert (p3=v1  && p2=v1 ) => ( p1=v1 && ! p1=v1);
$assert (p1=v2  && p13=v3 ) => ( p1=v1 && ! p1=v1);
